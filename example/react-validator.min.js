'use strict';var _createClass=function(){function a(b,c){for(var f,d=0;d<c.length;d++)f=c[d],f.enumerable=f.enumerable||!1,f.configurable=!0,'value'in f&&(f.writable=!0),Object.defineProperty(b,f.key,f)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}var utils={testRegex:function testRegex(a,b){return a.toString().match(b)},rules:{required:{message:'The :attribute field is required',rule:function rule(a){return utils.testRegex(a,/.+/)}},max:{message:'The :attribute may not be greater than :max characters',rule:function rule(a,b){return a.length<=b[0]},messageReplace:function messageReplace(a,b){return a.replace(':max',b[0])}},min:{message:'The :attribute may not be greater than :mix characters',rule:function rule(a,b){return a.length>=b[0]},messageReplace:function messageReplace(a,b){return a.replace(':min',b[0])}},email:{message:'The :attribute must be a valid email address',rule:function rule(a){return utils.testRegex(a,/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i)}},number:{message:'The :attribute must be a number',rule:function rule(a){return utils.testRegex(a,/^\d+.?\d*$/)}},phone:{message:'The :attribute must be a valid phone number',rule:function rule(a){return utils.testRegex(a,/^1[3|5|7|8]\d{9}/)}},url:{message:'The :attribute must be a valid url',rule:function rule(a){return utils.testRegex(a,/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i)}},accepted:{message:'The :attribute must be a accepted',rule:function rule(a){return!0===a}}}},ReactValidator=function(){function a(){_classCallCheck(this,a),this.fields=[],this.rules=utils.rules,this.showMessage=!1}return _createClass(a,[{key:'hideMessages',value:function hideMessages(){this.showMessage=!1}},{key:'showMessages',value:function showMessages(){this.showMessage=!0}},{key:'allValid',value:function allValid(){for(var b in this.fields)if(this.fields.hasOwnProperty(b)&&!1===this.fields[b])return console.warn('field '+b+' result not match rule'),!1;return!0}},{key:'message',value:function message(b,c,d,f){var g=4<arguments.length&&void 0!==arguments[4]?arguments[4]:{};this.fields[b]=!0;for(var h=d.split('|'),j=void 0,k=void 0,l=void 0,m=0;m<h.length;m++)if(c=this.filterEmptyValue(c),j=this.getRule(h[m]),k=this.getOptions(h[m]),!this.isValid(c,j,k)&&(this.fields[b]=!1,this.showMessage)){if(l=g[j]||g.default||this.rules[j].message.replace(':attribute',b),0<k.length&&this.rules[j].hasOwnProperty('messageReplace')){var n=this.rules[j].messageReplace(l,k);return this.createErrorEle(n,f)}return this.createErrorEle(l,f)}}},{key:'createErrorEle',value:function createErrorEle(b,c){return React.createElement('div',{className:c||'error-message'},b)}},{key:'filterEmptyValue',value:function filterEmptyValue(b){return void 0===b||null===b?'':b}},{key:'getRule',value:function getRule(b){return b.split(':')[0]}},{key:'getOptions',value:function getOptions(b){var c=b.split(':');return 1<c.length?c[1].split(','):[]}},{key:'isValid',value:function isValid(b,c,d){try{return this.rules[c].rule(b,d)}catch(f){console.error('not find your setting rule '+c+', Please read doc in https://github.com/febobo/react-validator')}}}]),a}();